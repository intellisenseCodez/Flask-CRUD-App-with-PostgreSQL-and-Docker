name: CI/CD for FlaskAPI Dockerized App


# define a specific event
on:
    push:
        branches: [ master ]
        # paths:
        #     - "./Dockerfile"
        paths-ignore:
            - "README.md"
            - "**/docs"
    pull_request:
        branches: [ master ]

    workflow_dispatch:

# define jobs
jobs:
    build-and-test:
        name: Build and Test
        runs-on: ubuntu-latest 

        steps:
            # checkout of code
            - name: Checkout
              uses: actions/checkout@v4

            # setup python
            - name: Set up python
              uses: actions/setup-python@v5
              with:
                python-version: '3.13'
                cache: 'pip' # caching pip dependencies
            
            # install requirements
            - name: install dependencies
              run: |
                pip install -r requirements.txt
              shell: bash

            # Test code
            - name: test code
              run: |
                echo "Running unit testing"
                pytest
              shell: bash

    build-and-publish-image-dockerhub:
        name: Build and publish image to Dockerhub
        needs: build-and-test
        runs-on: ubuntu-latest

        steps:
            # checkout of code
            - name: Checkout
              uses: actions/checkout@v4

            # Set up Docker Buildx
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            # Login to Docker Hub
            - name: Login to DockerHUB
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_PASSWORD }}

            # Build and Push Image
            - name: Build and push docker image
              uses: docker/build-push-action@v4
              with:
                context: .
                file: ./Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME }}/flask-restapi-crud-app:latest

            # image digest
            - name: Image digest
              run: echo ${{ steps.build-and-publish-image-dockerhub.outputs.digest }}
              shell: bash
